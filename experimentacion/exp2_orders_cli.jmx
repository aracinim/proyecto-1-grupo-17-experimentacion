<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.6.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Exp2 - Pedidos (400/min por 15m)" enabled="true">
      <stringProp name="TestPlan.comments">Objetivo: 400 pedidos/min por 15m; 5xx=0; DLQ=0; autoescalado &lt; 2m.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="PROTOCOL" elementType="Argument">
            <stringProp name="Argument.name">PROTOCOL</stringProp>
            <stringProp name="Argument.value">${__P(PROTOCOL,https)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="HOST_ORDER" elementType="Argument">
            <stringProp name="Argument.name">HOST_ORDER</stringProp>
            <stringProp name="Argument.value">${__P(HOST_ORDER,pedido-api-435513124363.us-central1.run.app)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="ID_TOKEN" elementType="Argument">
            <stringProp name="Argument.name">ID_TOKEN</stringProp>
            <stringProp name="Argument.value">${__P(ID_TOKEN,eyJhbGciOiJSUzI1NiIsImtpZCI6IjA3ZjA3OGYyNjQ3ZThjZDAxOWM0MGRhOTU2OWU0ZjUyNDc5OTEwOTQiLCJ0eXAiOiJKV1QifQ.eyJpc3MiOiJodHRwczovL2FjY291bnRzLmdvb2dsZS5jb20iLCJhenAiOiIzMjU1NTk0MDU1OS5hcHBzLmdvb2dsZXVzZXJjb250ZW50LmNvbSIsImF1ZCI6IjMyNTU1OTQwNTU5LmFwcHMuZ29vZ2xldXNlcmNvbnRlbnQuY29tIiwic3ViIjoiMTA3NTczMDc4MzU2MTUwNzY2ODQ0IiwiZW1haWwiOiJhbmdlbHJpY2FyZG9yYWNpbmltZXphQGdtYWlsLmNvbSIsImVtYWlsX3ZlcmlmaWVkIjp0cnVlLCJhdF9oYXNoIjoiTENlSUdJcU1HQm53c0hzRE5hbHUxdyIsImlhdCI6MTc1NzgwMTgxOCwiZXhwIjoxNzU3ODA1NDE4fQ.iLoLE6m4vo2DbFe6pJq3iNBzh5UDyGmEgmgPgdRCvar4iFygyiJ2aLt7YXFoWT1Xx1RfCNsB2eyNbNdoLjyPB0BJqtHkBWf9tXEMhxnmuBENkV-H8LjiOIZu4Jbrj1SS01sRnitWRpdKd2BaCQnxBH3uGUlYY5BrsnbeZnQBJZ6eKfasNlKCCuc0V91_U_tDLEpHcApBn4esDVAf8Bw8cRAti1vIPydKl3BLGItXw94t7kqnZIL1djoaeY8iESZXTUzprFLijb8vMPd36hQ7Lsn3DhhMcKCLA4t5awXm_GIF3d9HMwa2IJ9q-nl9S02yzxW_wcrOz6IsPPaixTO10w)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="SKU_CSV_PATH" elementType="Argument">
            <stringProp name="Argument.name">SKU_CSV_PATH</stringProp>
            <stringProp name="Argument.value">${__P(SKU_CSV_PATH,skus.csv)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>

      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain">${HOST_ORDER}</stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol">${PROTOCOL}</stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
      </ConfigTestElement>
      <hashTree/>

      <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="CSV SKUs" enabled="true">
        <stringProp name="delimiter">,</stringProp>
        <stringProp name="fileEncoding"></stringProp>
        <stringProp name="filename">${SKU_CSV_PATH}</stringProp>
        <boolProp name="ignoreFirstLine">true</boolProp>
        <boolProp name="quotedData">false</boolProp>
        <boolProp name="recycle">true</boolProp>
        <stringProp name="shareMode">shareMode.all</stringProp>
        <boolProp name="stopThread">false</boolProp>
        <stringProp name="variableNames">sku</stringProp>
      </CSVDataSet>
      <hashTree/>

      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="Content-Type" elementType="Header">
            <stringProp name="Header.name">Content-Type</stringProp>
            <stringProp name="Header.value">application/json</stringProp>
          </elementProp>
          <elementProp name="Authorization" elementType="Header">
            <stringProp name="Header.name">Authorization</stringProp>
            <stringProp name="Header.value">Bearer ${ID_TOKEN}</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>

      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Pedidos 400/min por 15m" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">true</boolProp>
          <stringProp name="LoopController.loops">-1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">30</stringProp>
        <boolProp name="ThreadGroup.scheduler">true</boolProp>
        <stringProp name="ThreadGroup.duration">900</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
      </ThreadGroup>
      <hashTree>
        <ConstantThroughputTimer guiclass="TestBeanGUI" testclass="ConstantThroughputTimer" testname="Constant Throughput 400/min" enabled="true">
          <intProp name="calcMode">1</intProp>
          <doubleProp>
            <name>throughput</name>
            <value>400.0</value>
            <savedValue>0.0</savedValue>
          </doubleProp>
        </ConstantThroughputTimer>
        <hashTree/>

        <JSR223PreProcessor guiclass="TestBeanGUI" testclass="JSR223PreProcessor" testname="Generate order_id/qty/customer_id" enabled="true">
          <stringProp name="scriptLanguage">groovy</stringProp>
          <stringProp name="script">def rnd = new java.util.Random()
vars.put('order_id', 'ORD-' + java.util.UUID.randomUUID().toString())
vars.put('qty', String.valueOf(1 + rnd.nextInt(3)))
vars.put('customer_id', 'CUST-' + (1000 + rnd.nextInt(900000)))</stringProp>
        </JSR223PreProcessor>
        <hashTree/>

        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="POST /pedido" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&quot;order_id&quot;:&quot;${order_id}&quot;,&quot;sku&quot;:&quot;${sku}&quot;,&quot;qty&quot;:${qty},&quot;customer_id&quot;:&quot;${customer_id}&quot;}</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
                <boolProp name="HTTPArgument.use_equals">false</boolProp>
                <stringProp name="HTTPArgument.contentType">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.path">/pedido</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Assert 200 or 202" enabled="true">
            <collectionProp name="Asserion.test_strings">
              <stringProp name="49586">20(0|2)</stringProp>
            </collectionProp>
            <stringProp name="Assertion.test_field">Assertion.response_code</stringProp>
            <intProp name="Assertion.test_type">2</intProp>
          </ResponseAssertion>
          <hashTree/>
        </hashTree>
      </hashTree>

      <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report (GUI - desactÃ­valo en carga real)" enabled="false">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time><latency>true</latency><timestamp>true</timestamp><success>true</success>
            <label>true</label><code>true</code><message>false</message><threadName>false</threadName>
            <dataType>false</dataType><encoding>false</encoding><assertions>false</assertions><subresults>false</subresults>
            <responseData>false</responseData><samplerData>false</samplerData><xml>false</xml><fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders><requestHeaders>false</requestHeaders><responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>false</saveAssertionResultsFailureMessage><assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes><sentBytes>true</sentBytes><url>false</url><threadCounts>true</threadCounts>
            <idleTime>true</idleTime><connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>

    </hashTree>
  </hashTree>
</jmeterTestPlan>